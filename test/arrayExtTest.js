// Generated by CoffeeScript 1.4.0

describe("Module", function() {
  var checkArray;
  checkArray = function(value) {
    return Array.isArray(value);
  };
  it("is right", function() {
    return expect(Array).toBeTruthy();
  });
  it("is array", function() {
    return expect(checkArray([1, 2, 3])).toBe(true);
  });
  it("is not array", function() {
    return expect(checkArray("FOO")).not.toBe(true);
  });
  it("add element if does not exists", function() {
    var foo, len;
    foo = [0, 1, 2, 3, 4, 5];
    len = foo.length;
    expect(foo.add(1)).toEqual(len);
    return expect(foo.add(16)).toEqual(len + 1);
  });
  it("shallow copy of an array", function() {
    var foo1, foo2;
    foo1 = [0, 1, 2, 3, 4, 5];
    foo2 = foo1.copy();
    foo2.add(6);
    return expect(foo2.length).toEqual(foo1.length + 1);
  });
  it("array has a list of alements", function() {
    var foo1, foo2, foo3;
    foo1 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    foo2 = [3, 4, 5, 6, 7, 8];
    foo3 = [5, 6, 7, 8, 9, 10, 11];
    expect(foo1.hasList(foo2)).toBe(true);
    return expect(foo1.hasList(foo3)).not.toBe(true);
  });
  it("remove an element at a position", function() {
    var foo, len;
    foo = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    len = foo.length;
    return expect(foo.remove(5)).toEqual(len - 1);
  });
  it("taking out a list of elements from an array", function() {
    var foo1, foo2, len;
    foo1 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    foo2 = [2, 5];
    len = foo1.length;
    return expect(foo1.difference(foo2)).toEqual(len - 1);
  });
  return it("Merging two arrays", function() {
    var foo1, foo2, merged;
    foo1 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    foo2 = [4, 8, 15, 16, 23, 42];
    merged = foo1.merge(foo2);
    return expect(merged.length).toEqual(foo1.length + 4);
  });
});
